# query project($where: ResourceWhereUniqueInput!) {
#   object: resource(where: $where) {
#     id
#     name
#     uri
#     type
#     Project {
#       ...project_
#     }
#   }
# }

# Так как проекты дергаются в том числе через ресурс,
# придется искать не по уникальному ключу

query projects(
  $where: ProjectWhereInput
  $first: Int
  $timersWhere: TimerWhereInput
) {
  projects(where: $where, take: $first) {
    ...project_
  }
}

fragment project_ on Project {
  ...ProjectNoNesting
  CreatedBy {
    ...UserNoNesting
  }
  Members {
    id
    User {
      ...UserNoNesting
    }
  }
  ProjectTasks(orderBy: { createdAt: desc }) {
    id
    createdAt
    updatedAt
    Task {
      # ...TaskNoNesting
      # CreatedBy {
      #   ...UserNoNesting
      # }
      # Timers(where: { stopedAt: null }) {
      #   id
      #   createdAt
      #   updatedAt
      #   stopedAt
      #   CreatedBy {
      #     ...UserNoNesting
      #   }
      # }
      # CreatedBy {
      #   ...UserNoNesting
      # }
      # Parent {
      #   ...TaskNoNesting
      # }

      # ...tasksConnectionTask
      ...task_
    }
  }
  Resource {
    id
    uri
    name
    type
    Image {
      id
      path
    }
  }
}
